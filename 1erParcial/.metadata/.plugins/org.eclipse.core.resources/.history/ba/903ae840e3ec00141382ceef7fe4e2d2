package calculadora;
import org.junit.Assert;
import org.junit.Test;

public class CalculadoraTest {
	
	//si quiero darle un tiempo @Test(timeout=30)
	@Test
	public void queSumaDosEnterosPositivos() {
		Calculadora calc = new Calculadora();
		Assert.assertEquals(3, calc.sumar(1, 2));
	}

	//Espero que de una excepction del tipo Runtime
	@Test(expected = RuntimeException.class)
	public void queNoSumeDosEnterosPositivos() {
		Calculadora calc = new Calculadora();
		calc.sumar(-1,2);
	}

	@Test
	public void queSumaDosFlotantesPositivos() {
		Calculadora calc = new Calculadora();
		Assert.assertEquals(3, calc.sumar(1, 2.), 0);
	}	
	
	@Test
	public void DividirDosFlotantes() {
		Calculadora calc = new Calculadora();
		Assert.assertEquals(1, calc.dividir(2, 2), 0);
		Assert.assertEquals(0.5, calc.dividir(1, 2), 0);
		Assert.assertEquals(0.33333333, calc.dividir(2, 3), 1E-3);
	}
	
	@Test(expected = RuntimeException.class)
	public void NoDividirPorCero() {
		Calculadora calc = new Calculadora();
		calc.dividir(2, 0);
	}
	
	@Test
	public void sumaConMemoriaPartiendoDeUnaSuma() {
		Calculadora calc = new Calculadora();
		Assert.assertEquals(4, calc.sumar(2,2));
		Assert.assertEquals(5, calc.sumarConMemoria(1));
		Assert.assertEquals(8, calc.sumarConMemoria(3));
		Assert.assertEquals(10, calc.sumarConMemoria(2));
	}
	
	@Test
	public void sumaConMemoriaPartiendoDeNada() {
		Calculadora calc = new Calculadora();
		Assert.assertEquals(5, calc.sumarConMemoria(5));
		Assert.assertEquals(8, calc.sumarConMemoria(3));
		Assert.assertEquals(10, calc.sumarConMemoria(2));
	}
}
